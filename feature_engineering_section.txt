Feature Engineering Strategy

The GPOP system employs a strategic approach to feature engineering that varies depending on the prediction task, balancing model sophistication with practical usability.

Why No Feature Engineering for Single Predictions and Long Horizon Extrapolation

For the single prediction and long horizon extrapolation workflows, the system deliberately avoids complex feature engineering for two critical reasons:

1. Preserving Single Input Capability
The single prediction functionality is designed to allow users to input individual feature values (e.g., "Brine Flowrate: 120 T/h", "Steam Flowrate: 45 T/h") and receive immediate predictions. If the model required engineered features like rolling averages, lag features, or temporal aggregations, users would need to provide historical time series data rather than simple point-in-time values. This would transform a simple prediction interface into a complex data upload requirement, defeating the purpose of quick, ad-hoc predictions.

2. Extrapolation Complexity
The long horizon extrapolation module projects feature trends into the future using mathematical models (constant, linear, exponential, polynomial) with optional seasonality. If the underlying model required engineered features, the extrapolation logic would need to:
- Project not just the raw features, but also their derived relationships (e.g., if the model used 7-day moving averages, the system would need to extrapolate those averages)
- Maintain temporal dependencies between engineered features and their source features
- Handle edge cases where derived features might become invalid during extrapolation

This would significantly complicate the trend modeling and make the extrapolation logic fragile and difficult to validate.

Feature Engineering for Next Day Prediction

In contrast, the next day prediction module employs sophisticated feature engineering because it operates on a different paradigm - using a complete historical window to predict future values.

Sliding Window Feature Engineering
The create_nextday_features() function transforms the raw time series data into engineered features by:

1. Temporal Window Flattening: Takes the last 24 hours of each feature and flattens them into individual features (e.g., Brine_Flowrate_hour_0, Brine_Flowrate_hour_1, ..., Brine_Flowrate_hour_23)

2. Daily Aggregation Features: For each feature within the 24-hour window, calculates:
   - Daily mean, minimum, maximum values
   - Most recent value (last hour)
   - Standard deviation (capturing variability)

3. Multiple Output Modeling: Trains 24 separate XGBoost models, one for each hour of the next day, allowing the system to capture hour-specific patterns and dependencies.

Why This Works for Next Day Prediction
This approach is feasible for next day prediction because:
- Fixed Input Structure: Users upload exactly 24 hours of historical data, providing a consistent input format
- No Extrapolation Required: The engineered features are calculated from actual historical data, not projected values
- Predictable Workflow: The prediction process is designed around having complete recent operational data, which is typical for day-ahead planning scenarios

This strategic differentiation allows the GPOP system to offer both simple, accessible prediction capabilities and sophisticated time series forecasting where the additional complexity is justified by the prediction accuracy gains and operational context. 